gljgfljbjjfalasjgf-23jasdlfgji= -42;


vqec_version = "1.0.0";
channel_lineup = "/auto/wsansawchu/main7/vam/tools/vqe_channels.cfg";
cdi_enable = true;
domain_name_override = "iptvdev.cisco.com";
sig_mode = "nat";
nat_binding_refresh_interval = 1;
input_ifname = "eth1";
max_tuners = 10;
libcli_telnet_port = 8183;
pakpool_size = 1000;
output_q_limit = 100;
strip_rtp = false;
app_paks_per_rcc = 10;
error_repair_enable = true;  #this is a comment
error_repair_enables = true;
jitter_buff_size = 1000;
error_repair_policer =
{
  enable = false;
  rate = 5;
  burst = 10000;
};
repair_trigger_point_abs = 20;
reorder_delay_abs = 20;
#log_level = 4;
vcds_server_ip = "10.86.21.18";
vcds_server_port = 8554;
group1 = {
  parm11 = true;
  parm12 = 5;
  parm13 = 0xf;
  group2 = {
    parm21 = "test_string";
    parm22 = faLSe;
  };
};

rcc_enable = true;
cli_ifname = "*";
rtcp_dscp_value = 24;
deliver_paks_to_user = false;
list1 = (
  2,
  5,
  7,
  11
);
app_delay = 0;
wronglist = 
(
  1234,
 9 
);
rcc_pakpool_max_pct = 80;
list2 = (
  (3, 4),
  (fAlse, TRue),
  ((10,11),(14,15))
);

max_receive_bandwidth_sd = 0;
max_receive_bandwidth_hd = 0;
grouplist = {
  sublist1 = (44, 55);
  sublist2 = ("sevenseven", "eighteight");
};
min_hd_stream_bitrate = 0;
test_str_concat = "this string"
"should be concatenated"
"when it is interpreted";
test_str_escapes = "this\nstring\ruses\\the\"escape\tcharacter\fsequences";
max_fastfill = 0;  //this is yet another comment
tuner_list = (
  {
    name = "t";
    url = "rtp://230.151.1.1:10000";
    stream_output_if = "eth1";
    stream_output_url = "rtp://5.8.48.2:13378";
    max_receive_bandwidth_rcc = 0;
    max_receive_bandwidth_er = 0;
    igmp_proxy_stb_if = "eth4";
    igmp_proxy_stb_ip_address = "5.8.48.199";
  }
);
test_lit1 = 1; // comment
test_lit2 = 1; # comment
test_lit3 = " # comment"; #comment
test_lit4 = " // comment"; //comment
test_lit5 = "string \" unfinished quote # endstring"; #comment
test_lit6 = "string \" unfinished quote // endstring"; //comment
test_lit7 = "string \" finished quote # enquote \" #noncomment endstring"; #comment
test_lit8 = "string \" finished quote // enquote \" //noncomment endstring"; //comment
test_lit9 = "string \" unfinished quote # endstring\\"; #comment
test_lit0 = "string \" unfinished quote # endstring\\\"; #comment";

dsfjldkdkdlsfjslfjsdfjsdflj = "somestuff";

test_comment1 = 15 /* this is a comment */;
test_comment2 = 15 /* this is a comment */; //here's another
test_comment3 = 15/* this is a comment */67;
test_comment4 = 15; /* this is a comment */

test_string = "this = a string; it uses (special) {characters},{and stuff};";

test_mstyle_comment = 13/* this is
                         * a comment that
                         * spans multiple lines
                         * and then just ends
                         */37;
test_mstyle_comment2 = 56 /* hello
                           * ; ( ) = { } world!!! */ 78; //here's another comment


invalid_param = asdf;
